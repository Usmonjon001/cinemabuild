{"version":3,"sources":["assets/images/Logo.jsx","containers/NavigationBar/index.jsx","containers/NavigationBar/NavigationBar.jsx","components/MovieCard/index.jsx","components/MovieCard/MovieCard.jsx","pages/HomePage/index.jsx","pages/HomePage/HomePage.jsx","pages/MoviesPage/index.jsx","pages/MoviesPage/MoviesPage.jsx","pages/PopularPage/index.jsx","pages/PopularPage/PopularPage.jsx","pages/SingleMoviePage/index.jsx","pages/SingleMoviePage/SingleMoviePage.jsx","pages/SearchPage/index.jsx","pages/SearchPage/SearchPage.jsx","pages/TVSinglePage/index.jsx","pages/TVSinglePage/TVSinglePage.jsx","App.js","index.js"],"names":["Logo","NavigationBar","history","useHistory","useState","getSearchText","setSearchText","useEffect","length","push","className","to","type","placeholder","onChange","e","target","value","MovieCard","id","title","imgLink","date","rate","src","alt","HomePage","isFetched","data","error","movieList","setMovieList","axios","get","params","api_key","then","response","results","catch","console","log","map","item","vote_average","poster_path","release_date","MoviesPage","getMovie","setMovie","PopularPage","getPlaying","setPlaying","name","SingleMoviePage","match","getInfo","setInfo","getActors","setActors","cast","backdrop_path","original_language","Math","round","runtime","budget","overview","genres","href","homepage","profile_path","character","SearchPage","TVSinglePage","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6b81cdf.chunk.js","sourcesContent":["const Logo = () =>{\n    return(\n        <div></div>\n    )\n}\n\nexport default Logo;","import NavigationBar from './NavigationBar';\n\nexport default NavigationBar;","// React Tools\nimport {Link, useHistory} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\n\n// Style\nimport './NavigationBar.scss';\n\n// Images\nimport Logo from '../../assets/images/Logo';\n\nconst NavigationBar = () =>{\n\n    let history = useHistory();\n\n    // console.log(history);\n\n    const [getSearchText, setSearchText] = useState('');    \n\n\n    useEffect(() => {\n        if(getSearchText.length > 0){\n            history.push(`/searchpage/${getSearchText}`)\n        } else{\n            history.push(`/`)\n        }\n    }, [getSearchText])\n\n    // console.log(getSearchText);\n\n    return(\n        <header>\n            <div className=\"navbar container\">\n                <Logo/>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/movies\">Movie</Link>\n                <Link to=\"/popular\">Populars</Link>\n\n                <input type=\"text\" placeholder=\"Search...\" onChange={(e) => setSearchText(e.target.value)} value={getSearchText}/>\n            </div>\n        </header>\n    )\n}\n\nexport default NavigationBar;","import MovieCard from './MovieCard';\n\nexport default MovieCard;","// React Tools\nimport {Link} from 'react-router-dom';\n\n// Style\nimport './MovieCard.scss';\n\nconst MovieCard = ({id, title, imgLink, date, rate}) =>{\n    return (\n        <Link to={`/singlemovie/${id}`} className=\"movieCard\">\n            <span className=\"movieCard-rate\">{rate}</span>\n            <img src={`https://image.tmdb.org/t/p/w500${imgLink}`} alt=\"photos\" className=\"movieCard-img\"/>\n            <div className=\"movieCard-text\">\n                <h3>{title}</h3>\n                <p>{date}</p>\n                <Link to={`/singlemovie/${id}`}>Watch</Link>\n            </div>\n        </Link>\n    )\n}\n\nexport default MovieCard;\n","import HomePage from './HomePage';\n\nexport default HomePage;","// React Tools\nimport axios from 'axios';\nimport {useState, useEffect} from 'react';\n\n// Styles\nimport './HomePage.scss';\n\n// Components\nimport MovieCard from '../../components/MovieCard';\n\n\nconst HomePage = () => {\n\n    const [movieList, setMovieList] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    }, []);\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/movie/popular/`, {\n            params: {\n                api_key: 'ec559c313bd466192dc63eabc3d20188',\n            }\n            })\n            .then(function (response) {\n                setMovieList({\n                    isFetched: true,\n                    data: response.data.results,\n                    error: false\n                })\n            })\n            .catch(function (error) {\n                setMovieList({\n                    isFetched: true,\n                    data: [],\n                    error: error\n                })\n            })\n    }, [])\n\n    console.log(movieList);\n\n    return (\n        <div className=\"homePage container\">\n            {\n               movieList.isFetched ? (\n                   movieList.data.map((item) =>(\n\n                        <MovieCard rate={item.vote_average} id={item.id} imgLink={item.poster_path} title={item.title} date={item.release_date}/>\n\n                        // <div>\n                        //     <span>{item.vote_average}</span>\n                        //     <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`} alt=\"photos\"/>           \n                        //     <h1>{item.title}</h1>\n                        //     <p>{item.release_date}</p>         \n                        //     <Link to={`${item.id}`}>Watch</Link>        \n                        // </div>\n                   ))\n               ) : (\n                   <h1>Loading...</h1>\n               ) \n            }\n        </div>\n    )\n}\n\nexport default HomePage;","import MoviesPage from './MoviesPage';\n\nexport default MoviesPage;","// React Tools\nimport {useState, useEffect} from 'react';\n// import { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// Style\nimport './MoviesPage.scss';\n\n// Components\nimport MovieCard from '../../components/MovieCard';\n\nconst MoviesPage = () =>{\n\n    const [getMovie, setMovie] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    })\n\n    useEffect(() =>{\n        axios.get(`https://api.themoviedb.org/3/movie/top_rated/`, {\n            params: {\n                api_key: 'ec559c313bd466192dc63eabc3d20188',\n            }\n            })\n            .then(function (response) {\n                // console.log(response);\n                setMovie({\n                    isFetched: true,\n                    data: response.data.results,\n                    error: false\n                })\n            })\n            .catch(function (error) {\n                setMovie({\n                    isFetched: true,\n                    data: [],\n                    error: error\n                })\n            })\n            .then(function () {\n                // always executed\n            });\n    }, [])\n\n    console.log(getMovie.data);\n\n    return (\n        <div className=\"movie container\">\n            {\n                getMovie.isFetched ? (\n                    <div className=\"movie container\">\n                        {\n                            getMovie.data.map((item) =>(\n                                <MovieCard rate={item.vote_average} id={item.id} imgLink={item.poster_path} title={item.title} date={item.release_date}/>\n                            )) \n                        }\n                    </div>\n                ) : (\n                    <h1>Loading...</h1>\n                )\n            }\n        </div>\n    )\n}\n\nexport default MoviesPage;","import PopularPage from './PopularPage';\n\nexport default PopularPage;","// Styles\nimport './PopularPage.scss';\n\n// React Hooks\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// Components\nimport MovieCard from '../../components/MovieCard'\n\nconst PopularPage = () =>{\n\n    const[getPlaying, setPlaying] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    })\n\n    useEffect(() =>{\n        axios.get(`https://api.themoviedb.org/3/tv/popular`, {\n            params: {\n                api_key: 'ec559c313bd466192dc63eabc3d20188',\n            }\n        })\n        .then(function (response) {\n            // console.log(response);\n            setPlaying({\n                isFetched: true,\n                data: response.data.results,\n                error: null\n            })\n        })\n        .catch(function (error) {\n            // console.log(error);\n            setPlaying({\n                isFetched: true,\n                data: [],\n                error: error,\n            })\n        })\n        .then(function () {\n            // always executed\n        }); \n    }, []) \n\n\n    return (\n        <div className=\"popular container\">\n            {\n                getPlaying.isFetched ? (\n                    getPlaying.data.map((item) => (\n                        <MovieCard id={item.id} rate={item.vote_average} imgLink={item.poster_path} title={item.name} date={item.release_date}/>\n                    ))\n                ) : (\n                    <h1>Loading</h1>\n                )\n            }\n        </div>\n    )\n}\n\nexport default PopularPage;","import SingleMoviePage from './SingleMoviePage';\n\nexport default SingleMoviePage;","// React Hooks\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Styles\nimport './SingleMoviePage.scss';\n\nconst SingleMoviePage = ({ match }) => {\n\n    const [getInfo, setInfo] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    });\n\n    const [getActors, setActors] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    });\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}`, {\n            params: {\n                api_key: 'ec559c313bd466192dc63eabc3d20188',\n            }\n            })\n            .then(function (response) {\n                setInfo({\n                    isFetched: true,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(function (error) {\n                setInfo({\n                    isFetched: true,\n                    data: [],\n                    error: error\n                })\n            })\n    }, []);\n\n\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/credits`, {\n            params: {\n                api_key: 'ec559c313bd466192dc63eabc3d20188',\n            }         \n            })\n            .then(function (response) {\n                setActors({\n                    isFetched: true,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(function (error) {\n                setActors({\n                    isFetched: true,\n                    data: [],\n                    error: error\n                })\n            })\n    }, []);\n\n    console.log(getActors.data.cast);\n    // console.log(getInfo.data.genres[1].name);\n\n    return (\n            <>\n                {\n                getInfo.isFetched ? (\n                    <div className=\"singlePage\">\n                        <img src={`https://image.tmdb.org/t/p/w500${getInfo.data.backdrop_path}`} alt=\"photos\" className=\"singlePage_background\"/>\n                        <div className=\"singlePage-details container\">\n                            <span className=\"singlePage-details_rate\">{getInfo.data.vote_average}</span>\n                            <img src={`https://image.tmdb.org/t/p/w500${getInfo.data.poster_path}`} className=\"singlePage-details_image\" alt='photos' />\n                            <div className=\"singlePage-details-text\">\n                                <h1 className=\"singlePage-details-text_title\">{getInfo.data.title}</h1>\n                                <p className=\"singlePage-details-text_language\">Language: {getInfo.data.original_language} </p>\n                                <p className=\"singlePage-details-text_time\">Time: {Math.round(getInfo.data.runtime / 60)}:00:00</p>\n                                <p className=\"singlePage-details-text_date\">Date: {getInfo.data.release_date}</p>\n                                <p className=\"singlePage-details-text_budget\">Budget: ${getInfo.data.budget}</p>\n                                <p className=\"singlePage-details-text_overview\">About: {getInfo.data.overview}</p>\n                                <div className=\"singlePage-details-text-genres\">\n                                    {\n                                        getInfo.data.genres.map((item) =>(\n                                            <span className=\"singlePage-details-text-genres_item\">{item.name}</span>\n                                        ))\n                                    }\n                                </div>\n\n                                <a href={getInfo.data.homepage} className=\"singlePage-details-text_link\">Officila Website</a>\n\n                                {/* Actors */}\n\n                                <h1>Actors:</h1>\n\n                                {\n                                    getActors.isFetched ? (\n                                        <div className=\"actors\">\n                                            {\n                                                getActors.data.cast.map((item) =>(\n                                                    <div className=\"actors-card\">\n                                                        <img src={`https://image.tmdb.org/t/p/w500${item.profile_path}`} alt=\"photos\" />\n                                                        <p>{item.character}</p>\n                                                    </div>\n                                                ))\n                                            }\n                                        </div>\n                                    ) : (\n                                        <h1>Loading...</h1>\n                                    )\n                                }\n                            </div>\n                                \n\n                        </div>\n\n\n                    </div>\n                ) : (\n                    <h1 className=\"loading\">Info Yo'lda...</h1>\n                )\n            }\n            </>\n    )\n}\n\nexport default SingleMoviePage;","import SearchPage from './SearchPage';\n\nexport default SearchPage;","import './SearchPage.scss';\n\n// React Tools\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n// Components\nimport MovieCard from '../../components/MovieCard';\n\nconst SearchPage = ({ match }) =>{\n\n    const [movieList, setMovieList] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    }, []);\n\n    useEffect(() => {\n            axios.get(`https://api.themoviedb.org/3/search/movie/?query=${match.params.getSearchText}`, {\n                params: {\n                    api_key: 'ec559c313bd466192dc63eabc3d20188',\n                }\n                })\n                .then(function (response) {\n                    setMovieList({\n                        isFetched: true,\n                        data: response.data.results,\n                        error: false\n                    })\n                })\n                .catch(function (error) {\n                    setMovieList({\n                        isFetched: true,\n                        data: [],\n                        error: error\n                    })\n            })\n    }, [match.params.getSearchText])\n\n    return(\n        <div className=\"searchpage container\">\n            {\n               movieList.isFetched ? (\n                   movieList.data.map((item) =>(\n\n                        <MovieCard rate={item.vote_average} id={item.id} imgLink={item.poster_path} title={item.title} date={item.release_date}/>\n\n                        // <div>\n                        //     <span>{item.vote_average}</span>\n                        //     <img src={`https://image.tmdb.org/t/p/w500${item.poster_path}`} alt=\"photos\"/>           \n                        //     <h1>{item.title}</h1>\n                        //     <p>{item.release_date}</p>         \n                        //     <Link to={`${item.id}`}>Watch</Link>        \n                        // </div>\n                   ))\n               ) : (\n                   <h1>Loading...</h1>\n               ) \n            }\n        </div>\n    )\n}\n\nexport default SearchPage;","import TVSinglePage from './TVSinglePage';\n\nexport default TVSinglePage;","import './TVSinglePage.scss';\n\nconst TVSinglePage = () =>{\n    return (\n        <div>\n            <h1>This is TVSinglePage ;)</h1>\n        </div>\n    )\n}\n\nexport default TVSinglePage;","// React Tools\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n// Styles\nimport './assets/styles/main.scss';\n\n// Containers\nimport NavigationBar from './containers/NavigationBar';\n\n// Pages\nimport HomePage from './pages/HomePage';\nimport MoviesPage from './pages/MoviesPage';\nimport PopularPage from './pages/PopularPage';\nimport SingleMoviePage from './pages/SingleMoviePage';\nimport SearchPage from './pages/SearchPage';\nimport TVSinglePage from './pages/TVSinglePage';\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <div className=\"App\">\n              <NavigationBar/>\n              <Route exact path=\"/\" component={HomePage}/>\n              <Route path=\"/movies\" component={MoviesPage}/>\n              <Route path=\"/popular\" component={PopularPage}/>\n              <Route path=\"/searchpage/:getSearchText\" component={SearchPage}/>\n              <Route path=\"/singlemovie/:id\" component={SingleMoviePage}/>\n              <Route path=\"/tvsingle\" component={TVSinglePage}/>\n          </div>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}